import cv2
import numpy as np

img = cv2.imread("./missingSegments.png")
img =  cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
low = np.array([0,0,0])
high = np.array([1,1,1])
mask = cv2.inRange(img,low,high)
kernel  = np.ones((8,8), np.uint8)
erosion = cv2.erode(mask,kernel,iterations = 1)

contours, _ = cv2.findContours(erosion, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

spacing = 100
start_x = 111
start_y = 98
# inverting to iterate from start
contours = contours[::-1]

cols = ['A', 'B', 'C', 'D', 'E', 'F', 'G']
rows = [1, 2, 3, 4, 5, 6, 7]
all_segs = dict()
horizontal_seg = dict()
vertical_seg = dict()

# reference index for coordinates to keep track where we are at 
ind = 0
# keep track of coordinates
x = start_x
y = start_y
#  check rows 1-7 first
for i in range(7):
    #  starting w/ segment A-B
    # Horizontal lines
    for j in range(6):

        if (x,y) in contours[ind]:
            # if on last element of list
            if j == 6:
                horizontal_seg[f"({cols[j-1]}{rows[i]},{cols[j]}{rows[i]})"] = True
            else:
                horizontal_seg[f"({cols[j]}{rows[i]},{cols[j+1]}{rows[i]})"] = True
            ind += 1
            
        else:
            if j == 6:
                horizontal_seg[f"({cols[j-1]}{rows[i]},{cols[j]}{rows[i]})"] = False
            else:
                horizontal_seg[f"({cols[j]}{rows[i]},{cols[j+1]}{rows[i]})"] = False

        x += spacing

    # break iteration after this b/ no more to go through
    if ind == 72:
        break
    # inverting coords for vertical segments
    x,y = start_y, start_x
    for k in range(7):
        if i == 6:
            i = 5
        
        # vertical coord found here
        if (x,y) in contours[ind]:
            if k == 6:
                vertical_seg[f"({cols[k]}{rows[i]},{cols[k]}{rows[i+1]})"] = True
            else:
                vertical_seg[f"({cols[k]}{rows[i]},{cols[k]}{rows[i+1]})"] = True
            ind += 1
            
        else:
            if k == 6:
                vertical_seg[f"({cols[k]}{rows[i]},{cols[k]}{rows[i+1]})"] = False
            else:
                vertical_seg[f"({cols[k]}{rows[i]},{cols[k]}{rows[i+1]})"] = False

        x += spacing
    # reset x and y
    x = start_x
    y = start_y
    # add spacing to Y
    y += spacing

print("Missing horizontal links")
for k,v in horizontal_seg.items():
    if v == False:
        print(k)
print("Missing Vertical link")
for k,v in vertical_seg.items():
    if v == False:
        print(k)
